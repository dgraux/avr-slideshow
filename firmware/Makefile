
#-------------------------------------------------------------------------
#------------ PARAMETERS -------------------------------------------------
#-------------------------------------------------------------------------

PRG            = AvrSlideshow

MCU_TARGET     = atmega168 

OPTIMIZE       = -Os

INCLUDEDIRS    = 
DEFS           =
LIBS           =

CC             = avr-gcc
OBJCOPY        = avr-objcopy
OBJDUMP        = avr-objdump

# Parameters for avrdude
PROGRAMMER     = usbasp
AVRDUDE_TARGET = m168
AVRDUDE_CONF   = ./avrdude.conf
#PORT           =usb

# Override is only needed by avr-lib build system.
override CFLAGS        = -g -Wall $(OPTIMIZE) -std=c99 -mmcu=$(MCU_TARGET) $(DEFS) $(INCLUDEDIRS)
override LDFLAGS       = #-Wl -Map $(PRG).map
override ASMFLAGS      = $(CFLAGS) -x assembler-with-cpp -gstabs

EXTRA_CLEAN_FILES =

#-------------------------------------------------------------------------
#------------ Default rule -----------------------------------------------
#-------------------------------------------------------------------------

usage:
	@echo Possible targets:
	@echo "\t - usage/help	: print this help"
	@echo "\t - all		: compile the project to generate the hex before flashing it"
	@echo "\t - program	: flash on the AVR the stuff generated by 'all'"
	@echo "\t - root-program: flash on the AVR as root if permissions stop 'programm'"
	@echo "\t - fuse 	: change the microcontrolor's fuses"
	@echo "\t - clean	: clean the files created by 'all'"
	@echo "\t - doc		: generate the documentation with Doxygen"
	@echo "\t - cleandoc	: clean the files created by 'doc'"
	@echo "\t - cleanall	: clean everything :-)"

#-------------------------------------------------------------------------
#------------ Other rules ------------------------------------------------
#-------------------------------------------------------------------------

help: usage

#-----------------------------------------------
# Compilation
#-----------------------------------------------
all: tv-driver add-on principal
	$(CC) -mmcu=${MCU_TARGET} main.o setup.o slides1.o demo.o scroll.o rectangle.o common.o tvtext.o driver.o -o $(PRG).elf
	$(OBJCOPY) -O ihex -j .text $(PRG).elf $(PRG).hex
#	$(OBJCOPY) -O ihex -j .eeprom $(PRG).elf $(PRG).eeprom
	$(OBJDUMP) -h -S $(PRG).elf > $(PRG).lst

tv-driver: tvtext.o driver.o

add-on:

principal: common.o rectangle.o scroll.o demo.o slides1.o setup.o main.o

#-----------------------------------------------
# Flashing
#-----------------------------------------------
program:
	avrdude -p $(AVRDUDE_TARGET) -c $(PROGRAMMER) -C $(AVRDUDE_CONF) -P $(PORT) -v -e -b 115200 -U flash:w:$(PRG).hex #-U eeprom:w:$(PRG).eeprom

root-program:
	sudo avrdude -p $(AVRDUDE_TARGET) -c $(PROGRAMMER) -C $(AVRDUDE_CONF) -P $(PORT) -v -e -b 115200 -U flash:w:$(PRG).hex

changefuses:
	sudo avrdude -p $(AVRDUDE_TARGET) -c $(PROGRAMMER) -C $(AVRDUDE_CONF) -P $(PORT) -v -e -b 115200 -U lfuse:w:0xE7:m

#-----------------------------------------------
# Cleaning
#-----------------------------------------------
clean:
	rm -rf *~ *.o src/*.o $(TV)/*.o *.elf *.rom *.eeprom *.obj
	rm -rf *.o $(PRG).elf *.eps *.png *.pdf *.bak *.hex *.bin *.srec
	rm -rf *.lst *.map *~ $(EXTRA_CLEAN_FILES)

#-----------------------------------------------
# Fuses
#-----------------------------------------------
fuse:
	@echo "\t#################################################################"
	@echo "\t#                                                               #"
	@echo "\t#           It is important to configure the fuses              #"
	@echo "\t#  Because these operations can be dangerous for the AVR,       #"
	@echo "\t#  the changes are written in separate scripts:                 #"
	@echo "\t#\t1- Run ./fuses/modify to switch to the right config     #"
	@echo "\t#\t2- Run ./fuses/default to switch back                   #"
	@echo "\t#\t3- Run ./fuses/lockall to block the system              #"
	@echo "\t#                                                               #"
	@echo "\t#################################################################"




#-------------------------------------------------------------------------
#------------ Sub-rules --------------------------------------------------
#-------------------------------------------------------------------------

driver.o : driver.S tvtext.h
	$(CC) -c -g -x assembler-with-cpp -std=c99 -mmcu=${MCU_TARGET} driver.S -o driver.o

tvtext.o : tvtext.c config.h tvtext.h font_6.h font_8.h font.h
	$(CC) -c -g $(OPTIMIZE) -Wall -std=c99 -mmcu=${MCU_TARGET} tvtext.c -o tvtext.o

common.o : common.c common.h tvtext.h
	$(CC) -c -g $(OPTIMIZE) -Wall -std=c99 -mmcu=${MCU_TARGET} common.c -o common.o

rectangle.o : rectangle.c rectangle.h tvtext.h fontchars.h
	$(CC) -c -g $(OPTIMIZE) -Wall -std=c99 -mmcu=${MCU_TARGET} rectangle.c -o rectangle.o

scroll.o : scroll.c scroll.h tvtext.h
	$(CC) -c -g $(OPTIMIZE) -Wall -std=c99 -mmcu=${MCU_TARGET} scroll.c -o scroll.o

demo.o : demo.c demo.h tvtext.h common.h
	$(CC) -c -g $(OPTIMIZE) -Wall -std=c99 -mmcu=${MCU_TARGET} demo.c -o demo.o

slides1.o : slides1.c slides1.h tvtext.h common.h scroll.h joypad.h
	$(CC) -c -g $(OPTIMIZE) -Wall -std=c99 -mmcu=${MCU_TARGET} slides1.c -o slides1.o

setup.o : setup.c setup.h tvtext.h joypad.h rectangle.h scroll.h
	$(CC) -c -g $(OPTIMIZE) -Wall -std=c99 -mmcu=${MCU_TARGET} setup.c -o setup.o

main.o : main.c tvtext.h common.h joypad.h rectangle.h scroll.h demo.h slides1.h setup.h gamepreviews.h
	$(CC) -c -g $(OPTIMIZE) -Wall -std=c99 -mmcu=${MCU_TARGET} main.c -o main.o

